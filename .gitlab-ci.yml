---
# cSpell:ignore urllib unprotect interruptible
stages:
  - validate
  - release

default:
  image: alpine:latest
  before_script: &default_before_script
    - apk -U upgrade

variables:
  GIT_SUBMODULE_STRATEGY: recursive

.lint:
  stage: validate
  variables:
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.cache/pre-commit
  before_script:
    - *default_before_script
    - apk --no-cache add bash git go grep npm py-pip python3-dev shellcheck shfmt
    - pip install -r requirements.txt
    - npm install -g markdownlint-cli
  cache:
    - key: default
      paths:
        - $PIP_CACHE_DIR
      unprotect: true
      when: always
    - key:
        files:
          - .pre-commit-config.yaml
      paths:
        - $PRE_COMMIT_HOME
      unprotect: true
      when: always
  interruptible: true

lint:
  extends: [.lint]
  script:
    - |
      # Temporary skip protect-first-parent pre-commit hook until `[ERROR] caught error 1 on line 69 of ...: FIRST_PARENT="$(git show-ref -s "${BASE}")"` is fixed
      SKIP="check-hooks-apply,anti-todo,protect-first-parent"
      if [ -z "${GL_TOKEN:-}" ]; then
          SKIP="$SKIP,gitlab-ci-linter" pre-commit run -a --hook-stage manual
      else
          # Temporary skip gitlab-ci-linter pre-commit hook until `urllib.error.HTTPError: HTTP Error 410: Gone` is fixed
          SKIP="$SKIP,gitlab-ci-linter" GITLAB_PRIVATE_TOKEN="$GL_TOKEN" pre-commit run -a --hook-stage manual
      fi
  rules:
    - if: $CI_PIPELINE_SOURCE != 'merge_request_event'

lint-merge-request:
  extends: [.lint]
  script:
    - |
      # Temporary skip protect-first-parent pre-commit hook until `[ERROR] caught error 1 on line 69 of ...: FIRST_PARENT="$(git show-ref -s "${BASE}")"` is fixed
      SKIP="check-hooks-apply,protect-first-parent"
      if [ -z "${GL_TOKEN:-}" ]; then
          SKIP="$SKIP,gitlab-ci-linter" pre-commit run -a --hook-stage manual
      else
          # Temporary skip gitlab-ci-linter pre-commit hook until `urllib.error.HTTPError: HTTP Error 410: Gone` is fixed
          SKIP="$SKIP,gitlab-ci-linter" GITLAB_PRIVATE_TOKEN="$GL_TOKEN" pre-commit run -a --hook-stage manual
      fi
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

.test:
  stage: validate

.test-alpine:
  extends: [.test]
  before_script:
    - *default_before_script
    - apk --no-cache add bats git

.test-ubuntu:
  extends: [.test]
  image: ubuntu:latest
  before_script:
    - apt-get update && apt-get upgrade -y
    - apt-get install -y bats git

.test-full:
  script:
    - scripts/test tests/full.set
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"

.test-nightly:
  script:
    - scripts/test tests/nightly.set
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

test-alpine-full:
  extends: [.test-alpine, .test-full]

test-alpine-nightly:
  extends: [.test-alpine, .test-nightly]

test-ubuntu-full:
  extends: [.test-ubuntu, .test-full]

test-ubuntu-nightly:
  extends: [.test-ubuntu, .test-nightly]

release:
  stage: release
  image:
    name: node:latest
    entrypoint: [""]
  before_script:
    - apt-get update && apt-get upgrade -y
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/git @semantic-release/changelog @semantic-release/exec
  script:
    - npx semantic-release
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(((0|[1-9]\d*)\.)(((0|[1-9]\d*|x)\.)?x)|main|next(-major)?|beta|alpha)$/ && $CI_PIPELINE_SOURCE != "schedule"
  resource_group: release
